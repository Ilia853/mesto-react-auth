{"ast":null,"code":"export const BASE_URL = \"https://auth.nomoreparties.co\";\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`)).then(res => {\n    return res;\n  }).catch(err => console.log(\"Registration error\", err));\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => res.json()).then(data => {\n    if (data.token) {\n      localStorage.setItem(\"token\", data.token);\n      return data;\n    } else {\n      return;\n    }\n  }).catch(err => {\n    console.log(\"Authorize\", err);\n  });\n};\nexport const getContent = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(res => res.json())\n  // .then((data) => data)\n  .catch(err => {\n    console.log(\"Ошибка проверки токена\", err);\n  });\n};","map":{"version":3,"names":["BASE_URL","register","email","password","fetch","method","headers","body","JSON","stringify","then","res","ok","json","Promise","reject","status","catch","err","console","log","authorize","data","token","localStorage","setItem","getContent","Authorization"],"sources":["/Users/ilaegorov/Desktop/dev/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = \"https://auth.nomoreparties.co\";\n\nexport const register = (email, password) => {\n    return fetch(`${BASE_URL}/signup`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ email, password }),\n    })\n        .then((res) => (res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`)))\n        .then((res) => {\n            return res;\n        })\n        .catch((err) => console.log(\"Registration error\", err));\n};\n\nexport const authorize = (email, password) => {\n    return fetch(`${BASE_URL}/signin`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ email, password }),\n    })\n        .then((res) => res.json())\n        .then((data) => {\n            if (data.token) {\n                localStorage.setItem(\"token\", data.token);\n                return data;\n            } else {\n                return;\n            }\n        })\n        .catch((err) => {\n            console.log(\"Authorize\", err);\n        });\n};\n\nexport const getContent = (token) => {\n    return (\n        fetch(`${BASE_URL}/users/me`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${token}`,\n            },\n        })\n            .then((res) => res.json())\n            // .then((data) => data)\n            .catch((err) => {\n                console.log(\"Ошибка проверки токена\", err);\n            })\n    );\n};\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAA+B;AAEvD,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAK,EAAEC,QAAQ,KAAK;EACzC,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IAC/BK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,KAAK;MAAEC;IAAS,CAAC;EAC5C,CAAC,CAAC,CACGO,IAAI,CAAEC,GAAG,IAAMA,GAAG,CAACC,EAAE,GAAGD,GAAG,CAACE,IAAI,EAAE,GAAGC,OAAO,CAACC,MAAM,CAAE,WAAUJ,GAAG,CAACK,MAAO,EAAC,CAAE,CAAC,CAC9EN,IAAI,CAAEC,GAAG,IAAK;IACX,OAAOA,GAAG;EACd,CAAC,CAAC,CACDM,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,GAAG,CAAC,CAAC;AAC/D,CAAC;AAED,OAAO,MAAMG,SAAS,GAAG,CAACnB,KAAK,EAAEC,QAAQ,KAAK;EAC1C,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IAC/BK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,KAAK;MAAEC;IAAS,CAAC;EAC5C,CAAC,CAAC,CACGO,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACE,IAAI,EAAE,CAAC,CACzBH,IAAI,CAAEY,IAAI,IAAK;IACZ,IAAIA,IAAI,CAACC,KAAK,EAAE;MACZC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,IAAI,CAACC,KAAK,CAAC;MACzC,OAAOD,IAAI;IACf,CAAC,MAAM;MACH;IACJ;EACJ,CAAC,CAAC,CACDL,KAAK,CAAEC,GAAG,IAAK;IACZC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,GAAG,CAAC;EACjC,CAAC,CAAC;AACV,CAAC;AAED,OAAO,MAAMQ,UAAU,GAAIH,KAAK,IAAK;EACjC,OACInB,KAAK,CAAE,GAAEJ,QAAS,WAAU,EAAE;IAC1BK,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClCqB,aAAa,EAAG,UAASJ,KAAM;IACnC;EACJ,CAAC,CAAC,CACGb,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACE,IAAI,EAAE;EACzB;EAAA,CACCI,KAAK,CAAEC,GAAG,IAAK;IACZC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,GAAG,CAAC;EAC9C,CAAC,CAAC;AAEd,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}