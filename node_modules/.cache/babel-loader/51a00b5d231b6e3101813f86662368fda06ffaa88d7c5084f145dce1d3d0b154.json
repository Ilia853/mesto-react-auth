{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._checkResponse = res => {\n      res.ok ? res.json() : Promise.reject(res.statusText);\n    };\n    this._headers = headers;\n    this._baseUrl = baseUrl;\n  }\n  getProfile() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  editProfile(name, about) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(this._checkResponse);\n  }\n  addImage(name, link, likes) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link,\n        likes\n      })\n    }).then(this._checkResponse);\n  }\n  delImage(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  addLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  delLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  changeAvatar(avatar) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(this._checkResponse);\n  }\n}\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-55\",\n  headers: {\n    authorization: \"1964c9fe-86a7-460a-b318-7e558d91efb6\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","baseUrl","headers","_checkResponse","res","ok","json","Promise","reject","statusText","_headers","_baseUrl","getProfile","fetch","then","getInitialCards","editProfile","name","about","method","body","JSON","stringify","addImage","link","likes","delImage","cardId","addLike","delLike","changeAvatar","avatar","api","authorization"],"sources":["/Users/ilaegorov/Desktop/dev/mesto-react/src/components/utils/Api.js"],"sourcesContent":["class Api {\n    constructor({ baseUrl, headers }) {\n        this._headers = headers;\n        this._baseUrl = baseUrl;\n    }\n\n    _checkResponse = (res) => {\n        res.ok ? res.json() : Promise.reject(res.statusText);\n    }\n\n    getProfile() {\n        return fetch(`${this._baseUrl}/users/me`, {\n            headers: this._headers,\n        })\n            .then(this._checkResponse)\n    }\n\n    getInitialCards() {\n        return fetch(`${this._baseUrl}/cards`, {\n            headers: this._headers,\n        })\n            .then(this._checkResponse)\n    }\n\n    editProfile(name, about) {\n        return fetch(`${this._baseUrl}/users/me`, {\n            method: \"PATCH\",\n            headers: this._headers,\n            body: JSON.stringify({\n                name,\n                about,\n            }),\n        })\n            .then(this._checkResponse)\n    }\n\n    addImage(name, link, likes) {\n        return fetch(`${this._baseUrl}/cards`, {\n            method: \"POST\",\n            headers: this._headers,\n            body: JSON.stringify({\n                name,\n                link,\n                likes,\n            }),\n        })\n            .then(this._checkResponse)\n    }\n\n    delImage(cardId) {\n        return fetch(`${this._baseUrl}/cards/${cardId}`, {\n            method: \"DELETE\",\n            headers: this._headers,\n        })\n            .then(this._checkResponse)\n    }\n\n    addLike(cardId) {\n        return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n            method: \"PUT\",\n            headers: this._headers,\n        })\n            .then(this._checkResponse)\n    }\n\n    delLike(cardId) {\n        return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n            method: \"DELETE\",\n            headers: this._headers,\n        })\n            .then(this._checkResponse)\n    }\n\n    changeAvatar(avatar) {\n        return fetch(`${this._baseUrl}/users/me/avatar`, {\n            method: \"PATCH\",\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar,\n            }),\n        })\n            .then(this._checkResponse)\n    }\n}\n\nconst api = new Api({\n    baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-55\",\n    headers: {\n        authorization: \"1964c9fe-86a7-460a-b318-7e558d91efb6\",\n        \"Content-Type\": \"application/json\",\n    },\n});\n\nexport default api;\n"],"mappings":"AAAA,MAAMA,GAAG,CAAC;EACNC,WAAW,OAAuB;IAAA,IAAtB;MAAEC,OAAO;MAAEC;IAAQ,CAAC;IAAA,KAKhCC,cAAc,GAAIC,GAAG,IAAK;MACtBA,GAAG,CAACC,EAAE,GAAGD,GAAG,CAACE,IAAI,EAAE,GAAGC,OAAO,CAACC,MAAM,CAACJ,GAAG,CAACK,UAAU,CAAC;IACxD,CAAC;IANG,IAAI,CAACC,QAAQ,GAAGR,OAAO;IACvB,IAAI,CAACS,QAAQ,GAAGV,OAAO;EAC3B;EAMAW,UAAU,GAAG;IACT,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACF,QAAS,WAAU,EAAE;MACtCT,OAAO,EAAE,IAAI,CAACQ;IAClB,CAAC,CAAC,CACGI,IAAI,CAAC,IAAI,CAACX,cAAc,CAAC;EAClC;EAEAY,eAAe,GAAG;IACd,OAAOF,KAAK,CAAE,GAAE,IAAI,CAACF,QAAS,QAAO,EAAE;MACnCT,OAAO,EAAE,IAAI,CAACQ;IAClB,CAAC,CAAC,CACGI,IAAI,CAAC,IAAI,CAACX,cAAc,CAAC;EAClC;EAEAa,WAAW,CAACC,IAAI,EAAEC,KAAK,EAAE;IACrB,OAAOL,KAAK,CAAE,GAAE,IAAI,CAACF,QAAS,WAAU,EAAE;MACtCQ,MAAM,EAAE,OAAO;MACfjB,OAAO,EAAE,IAAI,CAACQ,QAAQ;MACtBU,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBL,IAAI;QACJC;MACJ,CAAC;IACL,CAAC,CAAC,CACGJ,IAAI,CAAC,IAAI,CAACX,cAAc,CAAC;EAClC;EAEAoB,QAAQ,CAACN,IAAI,EAAEO,IAAI,EAAEC,KAAK,EAAE;IACxB,OAAOZ,KAAK,CAAE,GAAE,IAAI,CAACF,QAAS,QAAO,EAAE;MACnCQ,MAAM,EAAE,MAAM;MACdjB,OAAO,EAAE,IAAI,CAACQ,QAAQ;MACtBU,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBL,IAAI;QACJO,IAAI;QACJC;MACJ,CAAC;IACL,CAAC,CAAC,CACGX,IAAI,CAAC,IAAI,CAACX,cAAc,CAAC;EAClC;EAEAuB,QAAQ,CAACC,MAAM,EAAE;IACb,OAAOd,KAAK,CAAE,GAAE,IAAI,CAACF,QAAS,UAASgB,MAAO,EAAC,EAAE;MAC7CR,MAAM,EAAE,QAAQ;MAChBjB,OAAO,EAAE,IAAI,CAACQ;IAClB,CAAC,CAAC,CACGI,IAAI,CAAC,IAAI,CAACX,cAAc,CAAC;EAClC;EAEAyB,OAAO,CAACD,MAAM,EAAE;IACZ,OAAOd,KAAK,CAAE,GAAE,IAAI,CAACF,QAAS,UAASgB,MAAO,QAAO,EAAE;MACnDR,MAAM,EAAE,KAAK;MACbjB,OAAO,EAAE,IAAI,CAACQ;IAClB,CAAC,CAAC,CACGI,IAAI,CAAC,IAAI,CAACX,cAAc,CAAC;EAClC;EAEA0B,OAAO,CAACF,MAAM,EAAE;IACZ,OAAOd,KAAK,CAAE,GAAE,IAAI,CAACF,QAAS,UAASgB,MAAO,QAAO,EAAE;MACnDR,MAAM,EAAE,QAAQ;MAChBjB,OAAO,EAAE,IAAI,CAACQ;IAClB,CAAC,CAAC,CACGI,IAAI,CAAC,IAAI,CAACX,cAAc,CAAC;EAClC;EAEA2B,YAAY,CAACC,MAAM,EAAE;IACjB,OAAOlB,KAAK,CAAE,GAAE,IAAI,CAACF,QAAS,kBAAiB,EAAE;MAC7CQ,MAAM,EAAE,OAAO;MACfjB,OAAO,EAAE,IAAI,CAACQ,QAAQ;MACtBU,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBS;MACJ,CAAC;IACL,CAAC,CAAC,CACGjB,IAAI,CAAC,IAAI,CAACX,cAAc,CAAC;EAClC;AACJ;AAEA,MAAM6B,GAAG,GAAG,IAAIjC,GAAG,CAAC;EAChBE,OAAO,EAAE,6CAA6C;EACtDC,OAAO,EAAE;IACL+B,aAAa,EAAE,sCAAsC;IACrD,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;AAEF,eAAeD,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}