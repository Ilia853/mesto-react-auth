{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._headers = headers;\n    this._baseUrl = baseUrl;\n  }\n  getProfile() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(res => res.ok ? res.json() : Promise.reject(res.statusText)).catch(console.log);\n  }\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(res => res.ok ? res.json() : Promise.reject(res.statusText)).catch(console.log);\n  }\n  editProfile(name, about) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(res => res.ok ? res.json() : Promise.reject(res.statusText)).catch(console.log);\n  }\n  addImage(name, link, likes) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link,\n        likes\n      })\n    }).then(res => res.ok ? res.json() : Promise.reject(res.statusText)).catch(console.log);\n  }\n  delImage(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => res.ok ? res.json() : Promise.reject(res.statusText)).catch(console.log);\n  }\n  addLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(res => res.ok ? res.json() : Promise.reject(res.statusText)).catch(console.log);\n  }\n  delLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => res.ok ? res.json() : Promise.reject(res.statusText)).catch(console.log);\n  }\n  changeAvatar(avatar) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(res => res.ok ? res.json() : Promise.reject(res.statusText)).catch(console.log);\n  }\n}\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-55\",\n  headers: {\n    authorization: \"1964c9fe-86a7-460a-b318-7e558d91efb6\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","baseUrl","headers","_headers","_baseUrl","getProfile","fetch","then","res","ok","json","Promise","reject","statusText","catch","console","log","getInitialCards","editProfile","name","about","method","body","JSON","stringify","addImage","link","likes","delImage","cardId","addLike","delLike","changeAvatar","avatar","api","authorization"],"sources":["/Users/ilaegorov/Desktop/dev/mesto-react/src/components/utils/Api.js"],"sourcesContent":["class Api {\n    constructor({ baseUrl, headers }) {\n        this._headers = headers;\n        this._baseUrl = baseUrl;\n    }\n\n    getProfile() {\n        return fetch(`${this._baseUrl}/users/me`, {\n            headers: this._headers,\n        })\n            .then((res) => (res.ok ? res.json() : Promise.reject(res.statusText)))\n            .catch(console.log);\n    }\n\n    getInitialCards() {\n        return fetch(`${this._baseUrl}/cards`, {\n            headers: this._headers,\n        })\n            .then((res) => (res.ok ? res.json() : Promise.reject(res.statusText)))\n            .catch(console.log);\n    }\n\n    editProfile(name, about) {\n        return fetch(`${this._baseUrl}/users/me`, {\n            method: \"PATCH\",\n            headers: this._headers,\n            body: JSON.stringify({\n                name,\n                about,\n            }),\n        })\n            .then((res) => (res.ok ? res.json() : Promise.reject(res.statusText)))\n            .catch(console.log);\n    }\n\n    addImage(name, link, likes) {\n        return fetch(`${this._baseUrl}/cards`, {\n            method: \"POST\",\n            headers: this._headers,\n            body: JSON.stringify({\n                name,\n                link,\n                likes,\n            }),\n        })\n            .then((res) => (res.ok ? res.json() : Promise.reject(res.statusText)))\n            .catch(console.log);\n    }\n\n    delImage(cardId) {\n        return fetch(`${this._baseUrl}/cards/${cardId}`, {\n            method: \"DELETE\",\n            headers: this._headers,\n        })\n            .then((res) => (res.ok ? res.json() : Promise.reject(res.statusText)))\n            .catch(console.log);\n    }\n\n    addLike(cardId) {\n        return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n            method: \"PUT\",\n            headers: this._headers,\n        })\n            .then((res) => (res.ok ? res.json() : Promise.reject(res.statusText)))\n            .catch(console.log);\n    }\n\n    delLike(cardId) {\n        return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n            method: \"DELETE\",\n            headers: this._headers,\n        })\n            .then((res) => (res.ok ? res.json() : Promise.reject(res.statusText)))\n            .catch(console.log);\n    }\n\n    changeAvatar(avatar) {\n        return fetch(`${this._baseUrl}/users/me/avatar`, {\n            method: \"PATCH\",\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar,\n            }),\n        })\n            .then((res) => (res.ok ? res.json() : Promise.reject(res.statusText)))\n            .catch(console.log);\n    }\n}\n\nconst api = new Api({\n    baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-55\",\n    headers: {\n        authorization: \"1964c9fe-86a7-460a-b318-7e558d91efb6\",\n        \"Content-Type\": \"application/json\",\n    },\n});\n\nexport default api;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}