{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._headers = headers;\n    this._baseUrl = baseUrl;\n  }\n  _checkResponse(res) {\n    return res.ok ? res.json() : Promise.reject(res.statusText);\n  }\n  getProfile() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  editProfile(name, about) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(this._checkResponse);\n  }\n  addImage(name, link, likes) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link,\n        likes\n      })\n    }).then(this._checkResponse);\n  }\n  delImage(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  // addLike(cardId) {\n  //     return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n  //         method: \"PUT\",\n  //         headers: this._headers,\n  //     })\n  //         .then(this._checkResponse)\n  // }\n\n  // delLike(cardId) {\n  //     return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n  //         method: \"DELETE\",\n  //         headers: this._headers,\n  //     })\n  //         .then(this._checkResponse)\n  // }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: isLiked ? \"PUT\" : \"DELETE\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  changeAvatar(avatar) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(this._checkResponse);\n  }\n}\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-55\",\n  headers: {\n    authorization: \"1964c9fe-86a7-460a-b318-7e558d91efb6\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","baseUrl","headers","_headers","_baseUrl","_checkResponse","res","ok","json","Promise","reject","statusText","getProfile","fetch","then","getInitialCards","editProfile","name","about","method","body","JSON","stringify","addImage","link","likes","delImage","cardId","changeLikeCardStatus","isLiked","changeAvatar","avatar","api","authorization"],"sources":["/Users/ilaegorov/Desktop/dev/mesto-react/src/utils/Api.js"],"sourcesContent":["class Api {\n    constructor({ baseUrl, headers }) {\n        this._headers = headers;\n        this._baseUrl = baseUrl;\n    }\n\n    _checkResponse(res){\n        return res.ok ? res.json() : Promise.reject(res.statusText)\n    }\n\n    getProfile() {\n        return fetch(`${this._baseUrl}/users/me`, {\n            headers: this._headers,\n        })\n            .then(this._checkResponse)\n    }\n\n    getInitialCards() {\n        return fetch(`${this._baseUrl}/cards`, {\n            headers: this._headers,\n        })\n            .then(this._checkResponse)\n    }\n\n    editProfile(name, about) {\n        return fetch(`${this._baseUrl}/users/me`, {\n            method: \"PATCH\",\n            headers: this._headers,\n            body: JSON.stringify({\n                name,\n                about,\n            }),\n        })\n            .then(this._checkResponse)\n    }\n\n    addImage(name, link, likes) {\n        return fetch(`${this._baseUrl}/cards`, {\n            method: \"POST\",\n            headers: this._headers,\n            body: JSON.stringify({\n                name,\n                link,\n                likes,\n            }),\n        })\n            .then(this._checkResponse)\n    }\n\n    delImage(cardId) {\n        return fetch(`${this._baseUrl}/cards/${cardId}`, {\n            method: \"DELETE\",\n            headers: this._headers,\n        })\n            .then(this._checkResponse)\n    }\n\n    // addLike(cardId) {\n    //     return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n    //         method: \"PUT\",\n    //         headers: this._headers,\n    //     })\n    //         .then(this._checkResponse)\n    // }\n\n    // delLike(cardId) {\n    //     return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n    //         method: \"DELETE\",\n    //         headers: this._headers,\n    //     })\n    //         .then(this._checkResponse)\n    // }\n\n    changeLikeCardStatus(cardId, isLiked) {\n        return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n            method: isLiked ? \"PUT\" : \"DELETE\",\n            headers: this._headers,\n        })\n            .then(this._checkResponse)\n    }\n\n    changeAvatar(avatar) {\n        return fetch(`${this._baseUrl}/users/me/avatar`, {\n            method: \"PATCH\",\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar,\n            }),\n        })\n            .then(this._checkResponse)\n    }\n}\n\nconst api = new Api({\n    baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-55\",\n    headers: {\n        authorization: \"1964c9fe-86a7-460a-b318-7e558d91efb6\",\n        \"Content-Type\": \"application/json\",\n    },\n});\n\nexport default api;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}